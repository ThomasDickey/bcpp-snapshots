# $Id: makefile.in,v 7.18 2013/10/07 16:43:54 tom Exp $
# Makefile-template for 'c_count'

SHELL		= /bin/sh

THIS		= c_count

#### Start of system configuration section. ####

@SET_MAKE@
srcdir 		= @srcdir@
VPATH  		= @srcdir@

CC		= @CC@
LINK		= $(CC)

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@
transform	= @program_transform_name@

CFLAGS		= @CFLAGS@ @EXTRA_CFLAGS@
CPPFLAGS	= -I. -I$(srcdir) -DHAVE_CONFIG_H @CPPFLAGS@

LIBS		= @LIBS@
LDFLAGS		= @LDFLAGS@

LINT		= @LINT@
CTAGS		= @CTAGS@
ETAGS		= @ETAGS@

prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@

bindir		= @bindir@
mandir		= @mandir@
manext		= 1

BINDIR		= $(DESTDIR)$(bindir)
MANDIR		= $(DESTDIR)$(mandir)/man1

x		= @EXEEXT@
o		= .@OBJEXT@

#### End of system configuration section. ####

################################################################################
.SUFFIXES : $o .i

.c$o:
	@RULE_CC@
	@ECHO_CC@$(CC) -c $(CPPFLAGS) $(CFLAGS) $<

.c.i :
	@RULE_CC@
	@ECHO_CC@$(CPP) -C $(CPPFLAGS) $*.c >$@

################################################################################

EXTRAOBJ = @EXTRAOBJ@
OBJ = $(THIS)$o $(EXTRAOBJ)

TRANSFORM_BIN = sed 's/$x$$//'       |sed '$(transform)'|sed 's/$$/$x/'
TRANSFORM_MAN = sed 's/$(manext)$$//'|sed '$(transform)'|sed 's/$$/$(manext)/'

actual_bin = `echo $(THIS)$x        | $(TRANSFORM_BIN)`
actual_man = `echo $(THIS).$(manext)| $(TRANSFORM_MAN)`

all:	$(THIS)$x

$(THIS)$x : $(OBJ)
	@ECHO_LD@$(LINK) $(LDFLAGS) -o $@ $(OBJ) $(LDFLAGS) $(LIBS)

install: all installdirs
	$(INSTALL_PROGRAM) $(THIS)$x $(BINDIR)/$(actual_bin)
	$(INSTALL_DATA) $(srcdir)/$(THIS).1 $(MANDIR)/$(actual_man)

installdirs:
	mkdir -p $(BINDIR) $(MANDIR)

uninstall:
	rm -f $(BINDIR)/$(actual_bin)
	rm -f $(MANDIR)/$(actual_man)

mostlyclean:
	- rm -f $(OBJ) getopt.c core *~ *.BAK *.i
	- rm -f Part?? part.*

clean :: mostlyclean
	- rm -f $(THIS)$x

distclean : clean
	- rm -f makefile config.log config.cache config.status config.h

realclean : distclean
	- rm -f tags TAGS # don't remove configure!

check: $(THIS)$x
	cd testing; $(MAKE) run_test

lint:
	$(LINT) $(CPPFLAGS) $(THIS).c

tags:
	$(CTAGS) $(THIS).c $(HDRS)

@MAKE_UPPER_TAGS@TAGS:
@MAKE_UPPER_TAGS@	$(ETAGS) $(THIS).c $(HDRS)

DIGITS   = sed -e 's/^[^0-9]*//g'
RELEASE	 = `fgrep RELEASE    patchlev.h | $(DIGITS)`
PATCHLEV = `fgrep PATCHLEVEL patchlev.h | $(DIGITS)`

# I keep my sources in RCS, and assign a symbolic release to the current patch
# level.  The 'manifest' script knows how to build a list of files for a given
# revision.
MANIFEST: patchlev.h
	manifest -rv$(RELEASE)_$(PATCHLEV) \
		testing/case*.dcl testing/case*.bat

dist: MANIFEST
	- rm -f .fname .files
	echo "$(THIS)-$(RELEASE).$(PATCHLEV)" >.fname
	cat MANIFEST | grep ' ' | egrep -v ' subdirectory$$' | sed -e 's/\ .*//' | uniq >.files
	rm -rf `cat .fname`
	TOP=`cat .fname`; mkdir $$TOP `cat .files | grep / | sed -e 's@/.*@@' | sed -e s@\^@$$TOP/@ | uniq`
	for file in `cat .files`; do \
	  ln $(srcdir)/$$file `cat .fname`/$$file \
	    || { echo copying $$file instead; cp $$file `cat .fname`/$$file; }; \
	done
	tar -cf - `cat .fname` | gzip >`cat .fname`.tgz
	rm -rf `cat .fname` .fname .files

$(THIS)$o:	config.h
getopt.c:	$(srcdir)/porting/getopt.c
	-@ rm -f $@
	cp $? $@
